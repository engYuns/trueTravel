version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: true-travel-postgres
    environment:
      POSTGRES_DB: true_travel_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: true-travel-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  api-gateway:
    build:
      context: ./backend/services/api-gateway
      dockerfile: Dockerfile
    container_name: true-travel-api-gateway
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - BOOKING_SERVICE_URL=http://booking-service:3002
      - USER_SERVICE_URL=http://user-service:3003
      - PAYMENT_SERVICE_URL=http://payment-service:3004
    depends_on:
      - booking-service
      - user-service
      - payment-service
    volumes:
      - ./backend/services/api-gateway:/app
      - /app/node_modules

  booking-service:
    build:
      context: ./backend/services/booking-service
      dockerfile: Dockerfile
    container_name: true-travel-booking-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/true_travel_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/services/booking-service:/app
      - /app/node_modules

  user-service:
    build:
      context: ./backend/services/user-service
      dockerfile: Dockerfile
    container_name: true-travel-user-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/true_travel_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/services/user-service:/app
      - /app/node_modules

  payment-service:
    build:
      context: ./backend/services/payment-service
      dockerfile: Dockerfile
    container_name: true-travel-payment-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/true_travel_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/services/payment-service:/app
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: true-travel-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
  redis_data: